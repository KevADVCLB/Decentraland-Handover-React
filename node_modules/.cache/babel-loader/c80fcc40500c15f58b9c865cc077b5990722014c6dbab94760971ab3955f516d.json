{"ast":null,"code":"import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './missions.css';\nimport AnimatedText from \"./AnimatedCharacters\";\nimport { useInView } from \"framer-motion\";\nimport AnimatedCharacters from \"./AnimatedCharacters\";\nimport AnimatedWords from \"./AnimatedWords\";\nimport { motion, useScroll, useSpring, useTransform, MotionValue } from \"framer-motion\";\n\n// function useParallax(value: MotionValue<number>, distance: number) {\n//     return useTransform(value, [0, 1], [-distance, distance]);\n// }\n\n// const Missions = (props) => {\n//     const container = {\n//         visible: {\n//             transition: {\n//                 staggerChildren: 0.03\n//             }\n//         }\n//     };\n//     const ref = useRef(null);\n//     const showCreate = useInView(ref);\n//     // const { scrollYProgress } = useScroll({ target: ref });\n//     // const y = useParallax(scrollYProgress, 300);\n//\n//     return (\n//         <motion.div\n//             className={`missions-container`}\n//             initial=\"hidden\"\n//             variants={container}\n//             animate={showCreate ? \"visible\" : \"hidden\"}\n//         >\n//             <section>\n//                 <h2 className={`section-index`}>01</h2>\n//                 <div className={`text-container`} ref={ref}>\n//                     <AnimatedCharacters type={'heading1'} text={'Create'}/>\n//                     <div>\n//                         <AnimatedWords type={'heading3'} text={'MULTIPLE CREATIVE TOOLS'}/>\n//                         <p className={isInView ? \"visible\" : \"hidden\"}>From wearables, emotes, scenes, or even names,\n//                             there\n//                             is an\n//                             infinity of things to create and\n//                             imagine!\n//                             Explore all the creative tools in decentraland.</p>\n//                         <button className={`btn_inverted`}>START DEVELOPING</button>\n//                     </div>\n//                 </div>\n//                 <div className={`img-container`}>\n//                     <img\n//                         alt={props.img_alt}\n//                         src={props.img_src_create}\n//                         className=\"create-img\"\n//                     />\n//                 </div>\n//             </section>\n//\n//             <section>\n//                 <h2 className={`section-index`}>02</h2>\n//                 <div className={`text-container`}>\n//                     <AnimatedCharacters type={'heading1'} text={'Sell'}/>\n//                     <div>\n//                         <h3>UNIQUE DECENTRAL MARKET</h3>\n//                         <p>Is your new outfit grasping a lot of attention? Buy and sell LAND, Estates, Avatar wearables\n//                             and names in the Decentraland Marketplace: stocking the very best digital goods backed by\n//                             the ethereum blockchain.</p>\n//                         <button>GO TO MARKETPLACE</button>\n//                     </div>\n//                 </div>\n//                 <div className={`img-container`}>\n//                     <img\n//                         alt={props.img_alt}\n//                         src={props.img_src_sell}\n//                     />\n//                 </div>\n//             </section>\n//\n//             <section>\n//                 <h2 className={`section-index`}>03</h2>\n//                 <div className={`text-container`}>\n//                     <h1>Influence</h1>\n//                     <div>\n//                         <h3>UNIQUE DECENTRAL MARKET</h3>\n//                         <p>Through the DAO, you are in control of the policies created to determine how the world\n//                             behaves: for example, what kinds of wearable items are allowed (or disallowed) after the\n//                             launch of the DAO, moderation of content, LAND policy and auctions, among others.</p>\n//                         <button>Learn more about DAO</button>\n//                     </div>\n//                 </div>\n//                 <div className={`img-container`}>\n//                     <img\n//                         alt={props.img_alt}\n//                         src={props.img_src_influence}\n//                     />\n//                 </div>\n//             </section>\n//         </motion.div>\n//     )\n// }\n\nMissions.defaultProps = {\n  img_src_create: '/playground_assets/create.png',\n  img_src_sell: '/playground_assets/sell_img.png',\n  img_src_influence: '/playground_assets/influence_img.png',\n  img_alt: 'image',\n  rootClassName: ''\n};\nMissions.propTypes = {\n  img_src: PropTypes.string,\n  img_alt: PropTypes.string,\n  rootClassName: PropTypes.string\n};\nexport default Missions;","map":{"version":3,"names":["React","useRef","useState","PropTypes","AnimatedText","useInView","AnimatedCharacters","AnimatedWords","motion","useScroll","useSpring","useTransform","MotionValue","Missions","defaultProps","img_src_create","img_src_sell","img_src_influence","img_alt","rootClassName","propTypes","img_src","string"],"sources":["/Users/acdc/Documents/decentraland_react/Decentraland-Handover-React/src/components/missionsMotion.js"],"sourcesContent":["import React, {useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport './missions.css'\nimport AnimatedText from \"./AnimatedCharacters\";\nimport {useInView} from \"framer-motion\"\nimport AnimatedCharacters from \"./AnimatedCharacters\";\nimport AnimatedWords from \"./AnimatedWords\";\nimport {\n    motion,\n    useScroll,\n    useSpring,\n    useTransform,\n    MotionValue\n} from \"framer-motion\";\n\n\n// function useParallax(value: MotionValue<number>, distance: number) {\n//     return useTransform(value, [0, 1], [-distance, distance]);\n// }\n\n\n// const Missions = (props) => {\n//     const container = {\n//         visible: {\n//             transition: {\n//                 staggerChildren: 0.03\n//             }\n//         }\n//     };\n//     const ref = useRef(null);\n//     const showCreate = useInView(ref);\n//     // const { scrollYProgress } = useScroll({ target: ref });\n//     // const y = useParallax(scrollYProgress, 300);\n//\n//     return (\n//         <motion.div\n//             className={`missions-container`}\n//             initial=\"hidden\"\n//             variants={container}\n//             animate={showCreate ? \"visible\" : \"hidden\"}\n//         >\n//             <section>\n//                 <h2 className={`section-index`}>01</h2>\n//                 <div className={`text-container`} ref={ref}>\n//                     <AnimatedCharacters type={'heading1'} text={'Create'}/>\n//                     <div>\n//                         <AnimatedWords type={'heading3'} text={'MULTIPLE CREATIVE TOOLS'}/>\n//                         <p className={isInView ? \"visible\" : \"hidden\"}>From wearables, emotes, scenes, or even names,\n//                             there\n//                             is an\n//                             infinity of things to create and\n//                             imagine!\n//                             Explore all the creative tools in decentraland.</p>\n//                         <button className={`btn_inverted`}>START DEVELOPING</button>\n//                     </div>\n//                 </div>\n//                 <div className={`img-container`}>\n//                     <img\n//                         alt={props.img_alt}\n//                         src={props.img_src_create}\n//                         className=\"create-img\"\n//                     />\n//                 </div>\n//             </section>\n//\n//             <section>\n//                 <h2 className={`section-index`}>02</h2>\n//                 <div className={`text-container`}>\n//                     <AnimatedCharacters type={'heading1'} text={'Sell'}/>\n//                     <div>\n//                         <h3>UNIQUE DECENTRAL MARKET</h3>\n//                         <p>Is your new outfit grasping a lot of attention? Buy and sell LAND, Estates, Avatar wearables\n//                             and names in the Decentraland Marketplace: stocking the very best digital goods backed by\n//                             the ethereum blockchain.</p>\n//                         <button>GO TO MARKETPLACE</button>\n//                     </div>\n//                 </div>\n//                 <div className={`img-container`}>\n//                     <img\n//                         alt={props.img_alt}\n//                         src={props.img_src_sell}\n//                     />\n//                 </div>\n//             </section>\n//\n//             <section>\n//                 <h2 className={`section-index`}>03</h2>\n//                 <div className={`text-container`}>\n//                     <h1>Influence</h1>\n//                     <div>\n//                         <h3>UNIQUE DECENTRAL MARKET</h3>\n//                         <p>Through the DAO, you are in control of the policies created to determine how the world\n//                             behaves: for example, what kinds of wearable items are allowed (or disallowed) after the\n//                             launch of the DAO, moderation of content, LAND policy and auctions, among others.</p>\n//                         <button>Learn more about DAO</button>\n//                     </div>\n//                 </div>\n//                 <div className={`img-container`}>\n//                     <img\n//                         alt={props.img_alt}\n//                         src={props.img_src_influence}\n//                     />\n//                 </div>\n//             </section>\n//         </motion.div>\n//     )\n// }\n\nMissions.defaultProps = {\n    img_src_create: '/playground_assets/create.png',\n    img_src_sell: '/playground_assets/sell_img.png',\n    img_src_influence: '/playground_assets/influence_img.png',\n    img_alt: 'image',\n    rootClassName: '',\n}\n\nMissions.propTypes = {\n    img_src: PropTypes.string,\n    img_alt: PropTypes.string,\n    rootClassName: PropTypes.string,\n}\n\nexport default Missions\n"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,gBAAgB;AACvB,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,SAAS,QAAO,eAAe;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SACIC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,YAAY,EACZC,WAAW,QACR,eAAe;;AAGtB;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,QAAQ,CAACC,YAAY,GAAG;EACpBC,cAAc,EAAE,+BAA+B;EAC/CC,YAAY,EAAE,iCAAiC;EAC/CC,iBAAiB,EAAE,sCAAsC;EACzDC,OAAO,EAAE,OAAO;EAChBC,aAAa,EAAE;AACnB,CAAC;AAEDN,QAAQ,CAACO,SAAS,GAAG;EACjBC,OAAO,EAAElB,SAAS,CAACmB,MAAM;EACzBJ,OAAO,EAAEf,SAAS,CAACmB,MAAM;EACzBH,aAAa,EAAEhB,SAAS,CAACmB;AAC7B,CAAC;AAED,eAAeT,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}